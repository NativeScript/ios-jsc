.\" zip_file_extra_field_get.mdoc -- get extra field for file in zip
.\" Copyright (C) 2012-2017 Dieter Baron and Thomas Klausner
.\"
.\" This file is part of libzip, a library to manipulate ZIP files.
.\" The authors can be contacted at <libzip@nih.at>
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\" 3. The names of the authors may not be used to endorse or promote
.\"    products derived from this software without specific prior
.\"    written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS
.\" OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY
.\" DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
.\" GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
.\" IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
.\" OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
.\" IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd December 18, 2017
.Dt ZIP_FILE_EXTRA_FIELD_GET 3
.Os
.Sh NAME
.Nm zip_file_extra_field_get ,
.Nm zip_file_extra_field_get_by_id
.Nd get extra field for file in zip
.Sh LIBRARY
libzip (-lzip)
.Sh SYNOPSIS
.In zip.h
.Ft const zip_uint8_t *
.Fn zip_file_extra_field_get "zip_t *archive" "zip_uint64_t index" "zip_uint16_t extra_field_index" "zip_uint16_t *idp" "zip_uint16_t *lenp" "zip_flags_t flags"
.Ft const zip_uint8_t *
.Fn zip_file_extra_field_get_by_id "zip_t *archive" "zip_uint64_t index" "zip_uint16_t extra_field_id" "zip_uint16_t extra_field_index" "zip_uint16_t *lenp" "zip_flags_t flags"
.Sh DESCRIPTION
The
.Fn zip_file_extra_field_get
function returns the extra field with index
.Ar extra_field_index
for the file at position
.Ar index
in the zip archive.
This pointer should not be modified or
.Xr free 3 Ap d ,
and becomes invalid when
.Ar archive
is closed.
If
.Ar idp
is not
.Dv NULL ,
the integer to which it points will be set to the ID (two-byte
signature) of the selected extra field.
If
.Ar lenp
is not
.Dv NULL ,
the integer to which it points will be set to the length of the
extra field.
Generally speaking,
.Ar lenp
and
.Ar idp
should be passed since only the extra field data is returned (i.e.,
neither the ID nor the length, if the
.Ar idp
and
.Ar lenp
arguments are not provided).
.Pp
The following
.Ar flags
are supported:
.Bl -tag -width ZIP_FL_UNCHANGEDXX -offset indent
.It Dv ZIP_FL_CENTRAL
Return extra fields from the archive's central directory.
.It Dv ZIP_FL_LOCAL
Return extra fields from the local file headers.
.It Dv ZIP_FL_UNCHANGED
Return the original unchanged extra fields, ignoring any changes made.
.El
.Pp
The
.Fn zip_file_extra_field_get_by_id
function returns the extra field with ID (two-byte signature)
.Ar extra_field_id
and index
.Ar extra_field_index
(in other words, the
.Ar extra_field_index Ns No 'th
extra field with ID
.Ar extra_field_id )
The other arguments are the same as for
.Fn zip_file_extra_field_get .
.Sh RETURN VALUES
Upon successful completion, a pointer to an extra field is returned,
or
.Dv NULL
if there is no extra field with that
.Ar extra_field_index
for the file with index
.Ar index .
In case of an error,
.Dv NULL
is returned and the error code in
.Ar archive
is set to indicate the error.
.Sh ERRORS
.Fn zip_file_extra_field_get
and
.Fn zip_file_extra_field_get_by_id
fail if:
.Bl -tag -width Er
.It Bq Er ZIP_ER_NOENT
.Ar index
is not a valid file index in
.Ar archive ,
or
.Ar extra_field_index
is not a valid extra file index (for ID
.Ar extra_field_id ) .
.El
.Sh SEE ALSO
.Xr libzip 3 ,
.Xr zip_file_extra_field_delete 3 ,
.Xr zip_file_extra_field_set 3 ,
.Xr zip_file_extra_fields_count 3
.Sh HISTORY
.Fn zip_file_extra_field_get
and
.Fn zip_file_extra_field_get_by_id
were added in libzip 0.11.
.Sh AUTHORS
.An -nosplit
.An Dieter Baron Aq Mt dillo@nih.at
and
.An Thomas Klausner Aq Mt tk@giga.or.at
.Sh CAVEATS
Please note that the extra field IDs 0x0001 (ZIP64 extension),
0x6375 (Infozip UTF-8 comment), and
0x7075 (Infozip UTF-8 file name) can not be read using
.Fn zip_file_extra_field_get
since they are used by
.Xr libzip 3
internally.
